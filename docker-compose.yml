version: '3.1'

services:
  nginx:
    image: nginx:latest
    container_name: Nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/generate-certs.sh:/etc/nginx/generate-certs.sh
      - ./nginx/startup.sh:/etc/nginx/startup.sh
    environment:
      - HOST_NAME=localhost
    entrypoint: /bin/bash -c "/etc/nginx/startup.sh"
    depends_on:
      - frontend
      - api

  postgres:
    image: postgres:latest
    container_name: Postgres
    ports:
      - "5432:5432"
    volumes:
      - mydbdata:/var/lib/postgresql/data
      - ./database/sql:/docker-entrypoint-initdb.d
      - ./.env:/.env
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}

  api:
    container_name: API
    build: 
      context: ./api
      target: development
    environment:
      - API_URL=https://localhost
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./api/middleware:/usr/src/app/middleware:ro
      - ./api/routes:/usr/src/app/routes:ro
      - ./api/utils:/usr/src/app/utils:ro
      - ./api/db.js:/usr/src/app/db.js:ro
      - ./api/server.js:/usr/src/app/server.js:ro
      - ./nginx/ssl:/usr/src/app/ssl
      - uploads:/usr/src/app/uploads
      - ./.env:/usr/src/app/.env
    depends_on:
      #- nginx
      - postgres

  frontend:
    container_name: React
    build:
      context: ./FrontEnd/guarantymetalui
      target: development
    volumes:
      - ./FrontEnd/guarantymetalui:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - WDS_SOCKET_PORT=0
      - REACT_APP_API_URL=https://localhost/api
    #depends_on:
    #  - api
    #  - nginx

volumes:
  mydbdata:
  uploads: # Define the uploads volume here
